{"version":3,"sources":["features/currentTodo.ts","features/filter.ts","features/todos.ts","app/store.ts","app/hooks.ts","components/TodoList/TodoList.tsx","components/TodoFilter/TodoFilter.tsx","api.ts","components/Loader/Loader.tsx","components/TodoModal/TodoModal.tsx","App.tsx","index.tsx"],"names":["actions","todo","type","payload","currentTodoReducer","state","action","query","status","defaultState","filterReducer","todos","loadingState","loading","todosReducer","rootReducer","combineReducers","currentTodo","filter","store","createStore","composeWithDevTools","applyMiddleware","thunk","useAppSelector","useDispatch","useSelector","TodoList","isError","id","loadedTodos","title","toLowerCase","includes","dispatch","filteredTodos","useMemo","completed","setTodo","todosAreEmpty","length","className","map","cn","onClick","TodoFilter","setQuery","setStatus","useState","localQuery","setLocalQuery","debouncedQuery","debounce","value","onSubmit","event","preventDefault","onChange","target","name","placeholder","style","pointerEvents","get","url","delay","fullURL","Promise","resolve","setTimeout","then","fetch","res","json","getUser","userId","Loader","TodoModal","selectedUser","setSelectedUser","setIsError","isLoading","setIsloading","removeTodo","a","user","useEffect","loadUser","href","email","App","todosAreLoading","currentModal","setLoading","setTodos","loadTodos","todosFromServer","Root","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.cb858048.chunk.js","sourcesContent":["import { Todo } from '../types/Todo';\n\n// we use string literal as a type to avoid mistype in future\ntype RemoveTodoAction = { type: 'currentTodo/REMOVE' };\n\n// payload is a typical name for an action data\ntype SetTodoAction = {\n  type: 'currentTodo/SET';\n  payload: Todo;\n};\n\n// Action creator return type protect us from a mistype\nconst removeTodo = (): RemoveTodoAction => ({ type: 'currentTodo/REMOVE' });\n\nconst setTodo = (todo: Todo): SetTodoAction => ({\n  type: 'currentTodo/SET',\n  payload: todo,\n});\n\n// These actions will be used in the application\nexport const actions = { setTodo, removeTodo };\n\ntype State = Todo | null;\ntype Action = SetTodoAction | RemoveTodoAction;\n\nconst currentTodoReducer = (\n  state: State = null,\n  action: Action,\n): State => {\n  switch (action.type) {\n    case 'currentTodo/SET':\n      return action.payload;\n    case 'currentTodo/REMOVE':\n      return null;\n\n    default:\n      return state;\n  }\n};\n\nexport default currentTodoReducer;\n","import { Status } from '../types/Status';\n\ntype SetQueryAction = {\n  type: 'filter/QUERY',\n  payload: string,\n};\n\ntype SetStatusAction = {\n  type: 'filter/STATUS',\n  payload: Status,\n};\n\nconst setQuery = (query: string): SetQueryAction => ({\n  type: 'filter/QUERY',\n  payload: query,\n});\n\nconst setStatus = (status: Status): SetStatusAction => ({\n  type: 'filter/STATUS',\n  payload: status,\n});\n\ntype State = { query: string, status: Status };\ntype Action = SetQueryAction | SetStatusAction;\n\nexport const actions = { setQuery, setStatus };\n\nconst defaultState: State = { query: '', status: 'all' };\n\nconst filterReducer = (\n  state: State = defaultState,\n  action: Action,\n) => {\n  switch (action.type) {\n    case 'filter/QUERY':\n      return {\n        ...state,\n        query: action.payload,\n      };\n    case 'filter/STATUS':\n      return {\n        ...state,\n        status: action.payload,\n      };\n    default:\n      return state;\n  }\n};\n\nexport default filterReducer;\n","import { Todo } from '../types/Todo';\n\ntype SetTodosAction = {\n  type: 'todos/SET',\n  payload: Todo[],\n};\n\ntype SetLoadingAction = {\n  type: 'todos/LOADING',\n  payload: boolean,\n};\n\nconst setTodos = (todos: Todo[]): SetTodosAction => ({\n  type: 'todos/SET',\n  payload: todos,\n});\n\nconst setLoading = (loadingState: boolean): SetLoadingAction => ({\n  type: 'todos/LOADING',\n  payload: loadingState,\n});\n\ntype State = { todos: Todo[], loading: boolean };\ntype Action = SetLoadingAction | SetTodosAction;\n\nexport const actions = { setTodos, setLoading };\n\nconst defaultState: State = { todos: [], loading: false };\n\nconst todosReducer = (\n  state: State = defaultState,\n  action: Action,\n): State => {\n  switch (action.type) {\n    case 'todos/SET':\n      return {\n        ...state,\n        todos: action.payload,\n      };\n    case 'todos/LOADING':\n      return {\n        ...state,\n        loading: action.payload,\n      };\n    default:\n      return state;\n  }\n};\n\nexport default todosReducer;\n","import { createStore, applyMiddleware, combineReducers } from 'redux';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport thunk from 'redux-thunk';\n\nimport currentTodoReducer from '../features/currentTodo';\nimport filterReducer from '../features/filter';\nimport todosReducer from '../features/todos';\n\nconst rootReducer = combineReducers({\n  currentTodo: currentTodoReducer,\n  filter: filterReducer,\n  todos: todosReducer,\n});\n\n// The `store` is passed to the Provider in `/src/index.tsx`\nexport const store = createStore(\n  rootReducer,\n  composeWithDevTools(\n    applyMiddleware(thunk),\n  ),\n);\n\nexport type RootState = ReturnType<typeof store.getState>;\nexport type AppDispatch = typeof store.dispatch;\n","import { TypedUseSelectorHook, useDispatch, useSelector } from 'react-redux';\nimport { AppDispatch, RootState } from './store';\n\nexport const useAppDispatch: () => AppDispatch = useDispatch;\nexport const useAppSelector: TypedUseSelectorHook<RootState> = useSelector;\n","/* eslint-disable max-len */\nimport React, { useMemo } from 'react';\nimport cn from 'classnames';\nimport { useDispatch } from 'react-redux';\nimport { useAppSelector } from '../../app/hooks';\nimport { actions } from '../../features/currentTodo';\n\ntype Props = {\n  isError: boolean\n};\n\nexport const TodoList: React.FC<Props> = ({ isError }) => {\n  const filter = useAppSelector(state => state.filter.status);\n  const query = useAppSelector(state => state.filter.query);\n  const currentTodo = useAppSelector(state => state.currentTodo?.id);\n  const loadedTodos = useAppSelector(state => state.todos.todos)\n    .filter(todo => todo.title.toLowerCase().includes(query.toLowerCase()));\n  const dispatch = useDispatch();\n\n  const filteredTodos = useMemo(() => {\n    switch (filter) {\n      case 'active':\n        return loadedTodos.filter(todo => !todo.completed);\n      case 'completed':\n        return loadedTodos.filter(todo => todo.completed);\n      default:\n        return loadedTodos;\n    }\n  }, [filter, query, loadedTodos]);\n\n  const { setTodo } = actions;\n\n  const todosAreEmpty = !filteredTodos.length && !isError;\n\n  return (\n    <>\n      {todosAreEmpty && (\n        <p className=\"notification is-warning\">\n          There are no todos matching current filter criteria\n        </p>\n      )}\n      {isError && (\n        <p className=\"notification is-danger\">\n          Error occured while todos are loaded!\n        </p>\n      )}\n\n      {filteredTodos.length > 0 && (\n        <table className=\"table is-narrow is-fullwidth\">\n          <thead>\n            <tr>\n              <th>#</th>\n\n              <th>\n                <span className=\"icon\">\n                  <i className=\"fas fa-check\" />\n                </span>\n              </th>\n\n              <th>Title</th>\n              <th> </th>\n            </tr>\n          </thead>\n\n          <tbody>\n            {filteredTodos.map(todo => (\n              <tr data-cy=\"todo\" key={todo.id}>\n                <td className=\"is-vcentered\">{todo.id}</td>\n                <td className=\"is-vcentered\">\n                  {todo.completed && (\n                    <span className=\"icon\" data-cy=\"iconCompleted\">\n                      <i className=\"fas fa-check\" />\n                    </span>\n                  )}\n                </td>\n\n                <td className=\"is-vcentered is-expanded\">\n                  <p className={cn(\n                    { 'has-text-danger': !todo.completed },\n                    { 'has-text-success': todo.completed },\n                  )}\n                  >\n                    {todo.title}\n                  </p>\n                </td>\n\n                <td className=\"has-text-right is-vcentered\">\n                  <button\n                    data-cy=\"selectButton\"\n                    className=\"button\"\n                    type=\"button\"\n                    onClick={() => {\n                      dispatch(setTodo(todo));\n                    }}\n                  >\n                    <span className=\"icon\">\n                      <i className={cn(\n                        { 'far fa-eye-slash': todo.id === currentTodo },\n                        { 'far fa-eye': todo.id !== currentTodo },\n                      )}\n                      />\n                    </span>\n                  </button>\n                </td>\n              </tr>\n            ))}\n          </tbody>\n        </table>\n      )}\n    </>\n  );\n};\n","import React, { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { debounce } from 'lodash';\nimport { actions } from '../../features/filter';\nimport { Status } from '../../types/Status';\n\nexport const TodoFilter: React.FC = () => {\n  const dispatch = useDispatch();\n  const { setQuery, setStatus } = actions;\n  const [localQuery, setLocalQuery] = useState('');\n  const statuses: { name: string, value: Status }[] = [\n    { name: 'All', value: 'all' },\n    { name: 'Active', value: 'active' },\n    { name: 'Completed', value: 'completed' },\n  ];\n\n  const debouncedQuery = debounce((value) => {\n    dispatch(setQuery(value));\n  }, 500);\n\n  const queryHandler = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setLocalQuery(event.target.value);\n    debouncedQuery(event.target.value);\n  };\n\n  const clearSearchHandler = () => {\n    setLocalQuery('');\n    dispatch(setQuery(''));\n  };\n\n  return (\n    <form\n      className=\"field has-addons\"\n      onSubmit={event => event.preventDefault()}\n    >\n      <p className=\"control\">\n        <span className=\"select\">\n          <select\n            data-cy=\"statusSelect\"\n            onChange={(event) => {\n              dispatch(setStatus(event.target.value as Status));\n            }}\n          >\n            {statuses.map(status => (\n              <option\n                key={status.name}\n                value={status.value}\n              >\n                {status.name}\n              </option>\n            ))}\n          </select>\n        </span>\n      </p>\n\n      <p className=\"control is-expanded has-icons-left has-icons-right\">\n        <input\n          data-cy=\"searchInput\"\n          type=\"text\"\n          className=\"input\"\n          placeholder=\"Search...\"\n          onChange={queryHandler}\n          value={localQuery}\n        />\n        <span className=\"icon is-left\">\n          <i className=\"fas fa-magnifying-glass\" />\n        </span>\n\n        {localQuery.length > 0 && (\n          <span className=\"icon is-right\" style={{ pointerEvents: 'all' }}>\n            {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n            <button\n              data-cy=\"clearSearchButton\"\n              onClick={clearSearchHandler}\n              type=\"button\"\n              className=\"delete\"\n            />\n          </span>\n        )}\n      </p>\n    </form>\n  );\n};\n","import { Todo } from './types/Todo';\nimport { User } from './types/User';\n\n// eslint-disable-next-line max-len\nconst BASE_URL = 'https://mate-academy.github.io/react_dynamic-list-of-todos/api';\n\nfunction wait(delay: number): Promise<void> {\n  return new Promise(resolve => {\n    setTimeout(resolve, delay);\n  });\n}\n\nfunction get<T>(url: string): Promise<T> {\n  // eslint-disable-next-line prefer-template\n  const fullURL = BASE_URL + url + '.json';\n\n  return wait(300)\n    .then(() => fetch(fullURL))\n    .then(res => res.json());\n}\n\nexport const getTodos = () => get<Todo[]>('/todos');\n\nexport const getUser = (userId: number) => get<User>(`/users/${userId}`);\n","import React from 'react';\nimport './Loader.scss';\n\nexport const Loader: React.FC = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import React, { useEffect, useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport cn from 'classnames';\nimport { actions } from '../../features/currentTodo';\nimport { getUser } from '../../api';\nimport { useAppSelector } from '../../app/hooks';\nimport { Todo } from '../../types/Todo';\nimport { User } from '../../types/User';\nimport { Loader } from '../Loader';\n\nexport const TodoModal: React.FC = () => {\n  const currentTodo = useAppSelector(state => state.currentTodo);\n  const [selectedUser, setSelectedUser] = useState<User | null>();\n  const [isError, setIsError] = useState(false);\n  const [isLoading, setIsloading] = useState(true);\n  const dispatch = useDispatch();\n  const { removeTodo } = actions;\n\n  async function loadUser() {\n    setIsloading(true);\n    try {\n      const user = await getUser((currentTodo as Todo).userId);\n\n      setSelectedUser(user);\n    } catch {\n      setIsError(true);\n    } finally {\n      setIsloading(false);\n    }\n  }\n\n  useEffect(() => {\n    loadUser();\n  }, []);\n\n  return (\n    <div className=\"modal is-active\" data-cy=\"modal\">\n      <div className=\"modal-background\" />\n\n      {isLoading && (\n        <Loader />\n      )}\n\n      {!isLoading && (\n        <div className=\"modal-card\">\n          <header className=\"modal-card-head\">\n            <div\n              className=\"modal-card-title has-text-weight-medium\"\n              data-cy=\"modal-header\"\n            >\n              {`Todo #${currentTodo?.id}`}\n            </div>\n\n            {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n            <button\n              type=\"button\"\n              className=\"delete\"\n              data-cy=\"modal-close\"\n              onClick={() => {\n                dispatch(removeTodo());\n              }}\n            />\n          </header>\n\n          <div className=\"modal-card-body\">\n            <p className=\"block\" data-cy=\"modal-title\">{currentTodo?.title}</p>\n\n            <p className=\"block\" data-cy=\"modal-user\">\n              <strong\n                className={cn(\n                  { 'has-text-danger': !currentTodo?.completed },\n                  { 'has-text-success': currentTodo?.completed },\n                )}\n              >\n                {currentTodo?.completed\n                  ? 'Done'\n                  : 'Planned'}\n              </strong>\n              {' by '}\n              {!isError && (\n                <a href={`mailto:${selectedUser?.email}`}>{selectedUser?.name}</a>\n              )}\n            </p>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n","/* eslint-disable max-len */\nimport React, { useEffect, useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { TodoList } from './components/TodoList';\nimport { TodoFilter } from './components/TodoFilter';\nimport { TodoModal } from './components/TodoModal';\nimport { Loader } from './components/Loader';\nimport { useAppSelector } from './app/hooks';\nimport { actions } from './features/todos';\nimport { getTodos } from './api';\n\nexport const App: React.FC = () => {\n  const todosAreLoading = useAppSelector(\n    (state) => (state.todos.loading),\n  );\n  const currentModal = useAppSelector(\n    (state) => (state.currentTodo),\n  );\n  const { setLoading, setTodos } = actions;\n  const dispatch = useDispatch();\n  const [isError, setIsError] = useState(false);\n  const loadTodos = async () => {\n    dispatch(setLoading(true));\n    try {\n      const todosFromServer = await getTodos();\n\n      dispatch(setTodos(todosFromServer));\n    } catch {\n      setIsError(true);\n    } finally {\n      dispatch(setLoading(false));\n    }\n  };\n\n  useEffect(() => {\n    loadTodos();\n  }, []);\n\n  return (\n    <>\n      <div className=\"section\">\n        <div className=\"container\">\n          <div className=\"box\">\n            <h1 className=\"title\">Todos:</h1>\n\n            <div className=\"block\">\n              <TodoFilter />\n            </div>\n\n            <div className=\"block\">\n              {todosAreLoading && (\n                <Loader />\n              )}\n              {!todosAreLoading && (\n                <TodoList\n                  isError={isError}\n                />\n              )}\n            </div>\n          </div>\n        </div>\n      </div>\n      {currentModal && (\n        <TodoModal />\n      )}\n    </>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { HashRouter as Router } from 'react-router-dom';\n\nimport { store } from './app/store';\nimport { App } from './App';\n\n// Just a convenient component with all the wrappers for the `App`\n// The Router component (if you use it) should be placed inside the Provider\nconst Root = () => (\n  <Provider store={store}>\n    <Router>\n      <App />\n    </Router>\n  </Provider>\n);\n\nReactDOM.render(<Root />, document.getElementById('root'));\n"],"sourceRoot":""}